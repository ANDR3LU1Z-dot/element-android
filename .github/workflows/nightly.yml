name: Nightly Tests

on:
  push:
    branches: [ release/* ]
  schedule:
    # At 20:00 every day UTC
    - cron: '0 20 * * *'
  workflow_dispatch:

# Enrich gradle.properties for CI/CD
env:
  CI_GRADLE_ARG_PROPERTIES: >
    -Porg.gradle.jvmargs=-Xmx4g
    -Porg.gradle.parallel=false
    -PallWarningsAsErrors=false
jobs:
  # Build Android Tests [Matrix SDK]
  build-android-test-matrix-sdk:
    name: Matrix SDK - Build Android Tests
    runs-on: macos-latest
    # No concurrency required, runs every time on a schedule.
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build Android Tests for matrix-sdk-android
        run: ./gradlew clean matrix-sdk-android:assembleAndroidTest $CI_GRADLE_ARG_PROPERTIES --stacktrace

  # Build Android Tests [Matrix APP]
  build-android-test-app:
    name: App - Build Android Tests
    runs-on: macos-latest
    # No concurrency required, runs every time on a schedule.
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build Android Tests for vector
        run: ./gradlew clean vector:assembleAndroidTest $CI_GRADLE_ARG_PROPERTIES --stacktrace

  # Run Android Tests
  integration-tests:
    name: Matrix SDK - Integration Tests
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [ 28 ]
    # No concurrency required, runs every time on a schedule.
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Start synapse server
        run: |
          pip install matrix-synapse
          curl https://raw.githubusercontent.com/matrix-org/synapse/develop/demo/start.sh -o start.sh
          chmod 777 start.sh
          ./start.sh --no-rate-limit
      # package: org.matrix.android.sdk.session
      - name: Run integration tests for  Matrix SDK [org.matrix.android.sdk.session] API[${{ matrix.api-level }}]
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86
          profile: Nexus 5X
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          emulator-build: 7425822
          script: |
            adb root
            adb logcat -c
            touch emulator-all.log
            chmod 777 emulator-all.log
            adb logcat >> emulator-all.log &
            ./gradlew $CI_GRADLE_ARG_PROPERTIES matrix-sdk-android:connectedDebugAndroidTest
      - name: Read Results
        if: always()
        id: get-comment-body
        run: python3 ./tools/ci/render_test_output.py all ./matrix-sdk-android/build/outputs/androidTest-results/connected/*.xml
      - name: Remove adb logcat
        if: always()
        run: pkill -9 adb
      - name: Upload Test Report Log
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: integrationtest-error-results
          path: |
            emulator-all.log

  ui-tests:
    name: UI Tests
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [ 28 ]
    # No concurrency required, runs every time on a schedule.
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Start synapse server
        run: |
          pip install matrix-synapse
          curl -sL https://raw.githubusercontent.com/matrix-org/synapse/develop/demo/start.sh \
            | sed s/127.0.0.1/0.0.0.0/g | sed 's/http:\/\/localhost/http:\/\/10.0.2.2/g' | bash -s -- --no-rate-limit
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Run sanity tests on API ${{ matrix.api-level }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86
          profile: Nexus 5X
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          emulator-build: 7425822  # workaround to emulator bug: https://github.com/ReactiveCircus/android-emulator-runner/issues/160
          script: |
            adb root
            adb logcat -c
            touch emulator.log
            chmod 777 emulator.log
            adb logcat >> emulator.log &
            ./gradlew $CI_GRADLE_ARG_PROPERTIES -PallWarningsAsErrors=false connectedGplayDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=im.vector.app.ui.UiAllScreensSanityTest || (adb pull storage/emulated/0/Pictures/failure_screenshots && exit 1 )
      - name: Upload Test Report Log
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: uitest-error-results
          path: |
            emulator.log
            failure_screenshots/

  codecov-units:
    name: Unit tests (with code coverage)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with: 
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: ./gradlew allCodeCoverageReport $CI_GRADLE_ARG_PROPERTIES
      - name: Upload Codecov data
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: codecov-xml
          path: |
            build/reports/jacoco/allCodeCoverageReport/allCodeCoverageReport.xml

  sonarqube:
    name: Sonaqube scan and coverage report
    runs-on: macos-latest
    if: always()
    needs:
      - codecov-units
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/download-artifact@v3
        with:
          name: codecov-xml # will restore to allCodeCoverageReport.xml by default; we restore to the same location in following tasks
      - run: mkdir -p build/reports/jacoco/allCodeCoverageReport/
      - run: mv allCodeCoverageReport.xml build/reports/jacoco/allCodeCoverageReport/
      - run: ./gradlew sonarqube $CI_GRADLE_ARG_PROPERTIES
        env:
          ORG_GRADLE_PROJECT_SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}

# Notify the channel about scheduled runs, do not notify for manually triggered runs
  notify:
    name: Matrix Notification
    runs-on: ubuntu-latest
    needs:
      - integration-tests
      - ui-tests
      - codecov-units
      - build-android-test-matrix-sdk 
      - build-android-test-app
      - sonarqube
    if: always() && github.event_name != 'workflow_dispatch'
    # No concurrency required, runs every time on a schedule.
    steps:
      -suses: michaelkaye/matrix-hookshot-action@v0.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          matrix_access_token: ${{ secrets.ELEMENT_ANDROID_NOTIFICATION_ACCESS_TOKEN }}
          matrix_room_id: ${{ secrets.ELEMENT_ANDROID_INTERNAL_ROOM_ID }}
          text_template: "Nightly test run: {{#each job_statuses }}{{#with this }}{{#if completed }}  {{name}} {{conclusion}} at {{completed_at}}, {{/if}}{{/with}}{{/each}}"
          html_template: "Nightly test run results: {{#each job_statuses }}{{#with this }}{{#if completed }}<br />{{ icon conclusion }}{{name}} <font colour='{{color conclusion}}'>{{conclusion}} at {{completed_at}} <a href=\"{{html_url}}\">[details]</a></font>{{/if}}{{/with}}{{/each}}"
